###
# Docker functions
###

# clear docker instances and volumes
drmall(){
  docker stop $(docker ps -aq)
  docker container prune -f
  docker rmi -f $(docker images -q)
  docker image prune -f
  docker volume rm $(docker volume ls -qf dangling=true)
}

# remove dangling images
ddangling(){
  docker rmi $(docker images -f "dangling=true" -q)
}

# stop all instances
dstop(){
  docker stop $(docker ps -aq)
}

# start mongo
dmst(){
  docker run -d --name mongo -p 27017:27017 -v ~/data:/data/db mongo
}

###
# System aliases
###

# open vim file or current directory
function v() {
  if [ $# -eq 0 ]; then
    vim .;
  else
    vim "$@";
  fi;
}

function tre() {
  tree -aC -I '.git|node_modules|bower_components' --dirsfirst "$@" | less -FRNX;
}

# Create a new directory and enter it
function mkd() {
   mkdir -p "$@" && cd "$_";
}

function ddb(){
  sudo dd bs=1m if="$1" of="$2" conv=sync
}

# list activates connections
lsof-tcp(){
  if [ -n "$1" ]
  then
    lsof -i tcp:$1
  else
    lsof -i tcp
  fi
}

# clear redis
redis-clear() {
 docker exec redis redis-cli FLUSHALL
}

# list folders size
dush(){
  if [ -n "$1" ]
  then
    du -h -d 1  | grep "[0-9].\?[0-9]$1"
  else
    du -h -d 1
  fi
}

# mongo backup
mbk(){
  mongodump --out ~/Desktop/mongo_backup  
}

# mongo restore
mbr(){
  mongodump ~/Desktop/mongo_backup
}

# clone project from github
gclo(){
  git clone --recursive git@github.com:$1/$2
} 

# search pattern in files
lcs(){
  grep -IirlZ $1 $2
}

lenv() {
 export $(cat $1 | grep -v "^#" | xargs)
 echo "Exported variables from $1"
}

sak(){
  for key in $(ls ~/.ssh/ | grep -v "config" | grep -v "known_hosts" | grep -v ".pub"); do
    ssh-add -K ~/.ssh/$key
  done
}

oathotp(){
  echo -n $(oathtool --base32 --totp $ONELOGIN_OTP_KEY)
}

1lotp(){
  echo -n $(lpass show --password $ONE_LOGIN_NAME)$(oathotp) | pbcopy
  echo "One login + OTP copied to clipboard"
}
